name: Lightsaber CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: lightsaber-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-shared:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-lightsaber-ci

      - name: Build Shared
        # TODO Understand why compileIosMainKotlinMetadata fails every time
        run: ./gradlew shared:build -x compileIosMainKotlinMetadata

  build-androidApp:
    runs-on: macos-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-lightsaber-ci

      - name: Build Android App
        run: ./gradlew androidApp:build

  build-debug-iosApp:
    runs-on: macos-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-lightsaber-ci

      - name: Shared Pod Install
        run: ./gradlew shared:podInstall

      # TODO Setup xcodebuild command correctly
      # - name: Build Debug iOS App
        # run: xcodebuild -workspace ./iosApp/iosApp.xcworkspace -scheme iosApp -configuration Debug |
        #  OBJROOT=./build/ios SYMROOT=./build/ios -arch arm64 -allowProvisioningUpdates

  test-shared:
    runs-on: macos-latest
    needs: build-shared
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-lightsaber-ci

      - name: Unit Test Shared
        run: ./gradlew shared:cleanAllTests shared:allTests

  e2e-test-androidApp:
    runs-on: macos-latest
    needs: build-androidApp
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-lightsaber-ci

      - name: Check cache
        run: ls androidApp/build

      - name: Check cache outputs
        run: ls androidApp/build/outputs

      - name: Check cache apk
        run: ls androidApp/build/outputs/apk

      - name: Check cache apk debug
        run: ls androidApp/build/outputs/apk/debug

      - uses: mobile-dev-inc/action-maestro-cloud@v1.1.0
        with:
          api-key: ${{ secrets.MAESTRO_CLOUD_API_KEY }}
          app-file: androidApp/build/outputs/apk/debug/androidApp-debug.apk